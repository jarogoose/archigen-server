package org.jarogoose.archigen.core.template.control;

import java.io.File;
import org.jarogoose.archigen.core.Paths;
import org.jarogoose.archigen.core.template.ArcTemplate;
import org.jarogoose.archigen.web.config.domain.model.dto.Config;
import org.jarogoose.archigen.web.generate.domain.model.dto.Domain;

public final class ControllerSummaryTemplate implements ArcTemplate {

  public static final String TEMPLATE = """
  package {{project-path}}.feature.{{root-name}}.control;

  import {{project-path}}.event.Event;
  import {{project-path}}.feature.{{root-name}}.api.{{feature-name}}SummaryFacade;
  import {{project-path}}.feature.{{root-name}}.domain.model.response.ShowAll{{feature-name}}Response;
  import lombok.extern.slf4j.Slf4j;
  import org.springframework.http.ResponseEntity;
  import org.springframework.web.bind.annotation.PostMapping;
  import org.springframework.web.bind.annotation.RequestMapping;
  import org.springframework.web.bind.annotation.RestController;

  /**
   * {@link {{feature-name}}SummaryController} handles GET REST events.
   * <p>
   * Summary controller is responsible for:
   * <li> read requests handling </li>
   * <li> read response handling </li>
   * <li> all levels exceptions handling </li>
   * <li> event recording </li>
   * <li> passing request to appropriate facade </li>
   *
   * @author Generated by {{author-name}}.
   */
  @Slf4j
  @RestController()
  @RequestMapping("{{rest-api}}/{{domain-uri}}-api/summary")
  public class {{feature-name}}SummaryController {

    private final {{feature-name}}SummaryFacade facade;

    public {{feature-name}}SummaryController({{feature-name}}SummaryFacade facade) {
      this.facade = facade;
    }

    @Event
    @PostMapping("show-all-{{uri}}")
    public ResponseEntity<ShowAll{{feature-name}}Response> showAll{{feature-name}}() {
      try {
        // TODO Auto-generated method stub
        return ResponseEntity.ok(null);
      } catch (Exception e) {
        log.error("[{{feature-name-uppercase}}] something went wrong", e);
        return ResponseEntity.internalServerError().build();
      }
    }
  }

  """;

  private final Config config;
  private final Domain domain;

  public ControllerSummaryTemplate(Config config, Domain domain) {
    this.config = config;
    this.domain = domain;
  }

  @Override
  public String content() {
    String template = TEMPLATE;

    template = replaceAuthorName(template, config.author());
    template =
      replaceProjectPath(template, config.artefact(), config.project());
    template = replaceRootName(template, domain.root());
    template = replaceRestApi(template, domain.restApi());
    template = replaceDomainUri(template, domain.root());
    template = replaceUri(template, domain.feature());
    template = replaceFeatureName(template, domain.feature());
    template = replaceFeatureNameUppercase(template, domain.feature());

    return template;
  }

  @Override
  public File file() {
    return new File(
      Paths.CONTROLLER_PATH.get(
        config,
        domain.root(),
        domain.feature(),
        "SummaryController",
        false
      )
    );
  }
}
